{% assign hs_product_description = product.description | replace: ' src="', ' loading="lazy" class="lazyload" data-src="' %}
{%- if product.metafields.inventory.ShappifyHidden == 'true' -%}{%- break -%}{%- endif -%}
{%- assign current_variant = product.selected_or_first_available_variant -%}
{%- assign featured_image = current_variant.featured_image | default: product.featured_image -%}

<div data-section-id="{{ section.id }}" data-section-type="product">
  <!-- Product Schema -->
  <div itemscope itemtype="https://schema.org/Product">
    <meta itemprop="name" content="{{ product.title }}">
    <meta itemprop="url" content="{{ shop.url }}{{ product.url }}">

    <div itemprop="brand" itemscope itemtype="https://schema.org/Brand">
      <meta itemprop="name" content="American Hat Makers">
      <meta itemprop="url" content="{{ shop.url }}">
      <meta itemprop="slogan" content="Hats for Everyone">
    </div>

    <meta itemprop="image"content="{{ featured_image | img_url: '600x600' }}">

    {% for image in product.images %}
      <meta itemprop="image" content="{{ image.src | product_img_url: 'medium' }}">
    {% endfor %}

    <meta itemprop="sku" content="{{ current_variant.sku }}">
    <meta itemprop="description" content="{{ product.metafields.global.description_tag }}">

    {% for item in  current_variant.tags %}
      <meta itemprop="keywords" content="{{ item }}">
    {% endfor %}

    {% assign productColor = "" %}
    {% for variant in product.variants %}
      {% if variant.option1 != productColor %}
        <meta itemprop="keywords" content="{{ variant.option1 }} hat">
        {% assign productColor = variant.option1 %}
      {% endif %}

      {%- assign floating_point_price = variant.price | money_without_currency -%}
      <div itemprop="offers" itemscope itemtype="https://schema.org/Offer">
        <meta itemprop="priceCurrency" content="USD">
        <meta itemprop="price" content="{{ floating_point_price | remove: "," | strip_html | escape }}">
        <meta itemprop="itemCondition" content="https://schema.org/NewCondition">
        <meta itemprop="url" content="{{ shop.url }}{{ variant.url }}">
        <meta itemprop="sku" content="{{ variant.sku }}">

        {% if variant.available %}
          <meta itemprop="availability" content="https://schema.org/InStock">
        {% else %}
          <meta itemprop="availability" content="https://schema.org/OutOfStock">
        {% endif %}
      </div>
    {% endfor %}

    {% if product.metafields.okendo.summaryData.reviewCount > 0 %}
      <div itemprop="aggregateRating" itemscope itemtype="https://schema.org/AggregateRating">
        <meta itemprop="ratingValue" content="{{ product.metafields.okendo.summaryData.reviewAverageValue }}">
        <meta itemprop="ratingCount" content="{{ product.metafields.okendo.summaryData.reviewCount }}">
      </div>
    {% elsif product.metafields.okendo.ReviewCount > 0 %}
      <div itemprop="aggregateRating" itemscope itemtype="https://schema.org/AggregateRating">
        <meta itemprop="ratingValue" content="{{ product.metafields.okendo.ReviewAverageValue }}">
        <meta itemprop="ratingCount" content="{{ product.metafields.okendo.ReviewCount }}">
      </div>
    {% endif %}
    
    {% assign keywordArray = product.metafields.custom.schemakeywords | split: "," %}
    {% for keyword in keywordArray %}
      <meta itemprop="keywords" content="{{ keyword }}">
    {% endfor %}
    
  </div>

  <div class="layout-content-wrapper">

    <link href="{{ featured_image | img_url: '600x600' }}" />

    {% for image in product.images %}
      <link href="{{ image.src | product_img_url: 'medium' }}">
    {% endfor %}   

    {%- comment %} images, title, price, etc. {% endcomment -%}
    {% include 'product-detail',
                product: product,
                current_variant: current_variant,
                show_share_buttons: section.settings.show_share_buttons
    %}
    
        {{product.metafields.shogun.below}}

    {% comment %}Create a shorthand for the custom fields object{% endcomment %}
    {% assign cf = product.metafields.custom_fields %}

    {% if cf['v_enable_module'] == 1 %}
      {% include 'video-module'
        v_id: product.id,
        v_image_desktop: cf['product_image']
      %}
    {% endif %}

    {% if cf['p_enable_module'] == 1 %}
      {% comment %}
        Promo Module
        Some of the values from the custom fields need to be parsed before sending them to the snippets.
      {% endcomment %}

      {% if cf['p_background-color'] == cream %}
        {% assign p_bgc = '#fffcf4' %}
      {% else %}
        {% assign p_bgc = '#ffffff' %}
      {% endif %}

      {% include 'promo',
                  p_id: product.id,
                  p_layout: cf['p_layout'],
                  p_type: 3,
                  p_background_color: p_bgc,
                  p_content_max_width: cf['p_content_max_width'],
                  p_content_alignment: cf['p_content_alignment'],
                  p_image: cf['p_image'],
                  p_eyebrow: cf['p_eyebrow'],
                  p_title: cf['p_title'],
                  p_text: cf['p_text'],
                  p_cta_url: cf['p_cta_url'],
                  p_cta_text: cf['p_cta_text']
      %}
    {% endif %}
   

    {% if cf['bp_enable_module'] == 1 %}
      {% comment %}
        Banner Module
        Some of the values from the custom fields need to be parsed before sending them to the snippets.
      {% endcomment %}
      {% assign bp_light_text = false %}
      {% if cf['bp_light_text'] == 1 %}
        {% assign bp_light_text = true %}
      {% endif %}

      {% assign bp_font_size = 'banner__panel--text-small' %}
      {% if cf['bp_font_size'] == 'large' %}
        {% assign bp_font_size = 'banner__panel--text-large' %}
      {% endif %}

      <div class="banner">
        {% include 'banner-panel-alt',
                    bp_id: product.id,
                    bp_content_alignment: cf['bp_content_alignment'],
                    bp_content_max_width: cf['bp_content_max_width'],
                    bp_background_image: cf['bp_background'],
                    bp_background_image_vertical_alignment: cf['bp_vertical_alignment'],
                    bp_background_image_small_vertical_alignment: cf['bp_vertical_alignment'],
                    bp_light_text: bp_light_text,
                    bp_overlay: cf['bp_overlay'],
                    bp_icon: cf['bp_icon'] ,
                    bp_title: cf['bp_title'] ,
                    bp_text: cf['bp_text'],
                    bp_font_size: bp_font_size,
                    bp_cta_url: cf['bp_cta_url'],
                    bp_cta_text: cf['bp_cta_title']
        %}
      </div>
    {% endif %}

    {% comment %}
      Two up Module
      Some of the values from the custom fields need to be parsed before sending them to the snippets.
    {% endcomment %}
    {% if cf["two_up_module"] != blank %}
      <div class="container-fluid">
        <div class="row justify-content-center">
          {% assign separator = "|###|" %}
          {% assign cc_icon_array = cf["cc_icon"] | split: separator %}
          {% assign cc_title_array = cf["cc_title"] | split: separator %}
          {% assign cc_text_array = cf["cc_text"] | split: separator %}
          {% assign cc_light_text_array = cf["cc_light_text"] | split: separator %}
          {% assign cc_cta_title_array = cf["cc_cta_title"] | split: separator %}
          {% assign cc_cta_url_array = cf["cc_cta_url"] | split: separator %}
          {% assign cc_background_image_array = cf["cc_background_image"] | split: separator %}
          {% assign fc_keys = cf["two_up_module"] | split: "," %}

          {% for i in fc_keys %}
            {% assign index = i | plus: 0 %}
            {% assign cc_id = product_id | append: '-' | append: i %}
            {% assign cc_light_text = false %}
            {% if cc_light_text_array == 1 %}
              {% assign cc_light_text_array = true %}
            {% endif %}

            {% include 'content-card',
                cc_id: cc_id,
                cc_icon: cc_icon_array[index],
                cc_title: cc_title_array[index],
                cc_text: cc_text_array[index],
                cc_light_text: cc_light_text_array[index],
                cc_cta_text: cc_cta_title_array[index],
                cc_cta_url: cc_cta_url_array[index],
                cc_cta_block_style: false
                cc_background_image: cc_background_image_array[index],
                cc_custom_class: 'col-lg-6'
            %}
          {% endfor %}
        </div>
      </div>
    {% endif %}
  </div>
</div>

<div class="container">
  <div id="size_chart_title" class="size-title">
    <h2>Hat Sizing Chart</h2>
  </div>
  <div class="size-guide-table">
    <table>
      <thead>
        <tr>
          <th>HNH-AHM <span>Hat Size</span></th>
          <th>U.S.A <span>Hat Size</span></th>
          <th>Head Measurement (IN)</th>
          <th>Head Measurement (CM)</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>XXS</td>
          <td>6<sup>1</sup>&frasl;<sub>4</sub></td>
          <td>19- 19<sup>5</sup>&frasl;<sub>8</sub></td>
          <td>50-51</td>
        </tr>
        <tr>
          <td>XS</td>
          <td>6 <sup>1</sup>&frasl;<sub>2</sub></td>
          <td>20-20<sup>7</sup>&frasl;<sub>8</sub></td>
          <td>52-53</td>
        </tr>
        <tr>
          <td>SM</td>
          <td>6 <sup>7</sup>&frasl;<sub>8</sub></td>
          <td>21-21<sup>7</sup>&frasl;<sub>8</sub></td>
          <td>54-55</td>
        </tr>
        <tr>
          <td>MD</td>
          <td>7 <sup>1</sup>&frasl;<sub>8</sub></td>
          <td>22-22 <sup>3</sup>&frasl;<sub>4</sub></td>
          <td>56-57</td>
        </tr>
        <tr>
          <td>LG</td>
          <td>7 <sup>3</sup>&frasl;<sub>8</sub></td>
          <td>22 <sup>7</sup>&frasl;<sub>8</sub> - 23 <sup>1</sup>&frasl;<sub>2</sub></td>
          <td>58-59</td>
        </tr>
        <tr>
          <td>XL</td>
          <td>7 <sup>5</sup>&frasl;<sub>8</sub></td>
          <td>23 <sup>5</sup>&frasl;<sub>8</sub> - 24 <sup>1</sup>&frasl;<sub>4</sub></td>
          <td>60-61</td>
        </tr>
        <tr>
          <td>2X</td>
          <td>7 <sup>7</sup>&frasl;<sub>8</sub></td>
          <td>24 <sup>3</sup>&frasl;<sub>8</sub>-24 <sup>7</sup>&frasl;<sub>8</sub></td>
          <td>62-63</td>
        </tr>
        <tr>
          <td>3X</td>
          <td>8 <sup>1</sup>&frasl;<sub>8</sub></td>
          <td>25-25 <sup>5</sup>&frasl;<sub>8</sub></td>
          <td>64-65</td>
        </tr>
      </tbody>
    </table>
  </div>
  <div class="size-note">
    <p>Sizes are approximate and will vary with hat style and material. If unsure about which size to choose, it's best to choose a larger size, as our sizing system can adjust the hat down to one full size smaller.</p>
  </div>
</div>

<!-- Infographic Section -->
<img src="https://cdn.shopify.com/s/files/1/2624/7744/files/quality_craftsmanship.png?v=1668185067">

<!-- As Seen In section -->
<h5 id="magazine-title" style="text-align: center">Our Hats Have Been Seen In</h5>
<div id="magazine-logos">
  <img id="magazine-img" src="https://cdn.shopify.com/s/files/1/2624/7744/files/Magazine-Logos-grey.png?v=1666642130">
</div>

<h2 style="text-align: center">{{ product.title }} - Reviews</h2>

<div class="container-fluid-max">
  <!-- Okendo Product Reviews Widget -->
  {% render 'okendo-reviews-widget', product: product %}
</div>

{% schema %}
  {
    "name": "Product Page",
    "settings": [
      {
        "type": "page",
        "id": "size_guide_page",
        "label": "Size Guide Page",
        "info": "Contents of this page will be displayed"
      },
      {
        "type": "header",
        "content": "How to measure settings"
      },
      {
        "type": "video_url",
        "id": "measurement_video",
        "label": "Measurement Video",
        "accept": ["vimeo"],
        "info": "Video to be displayed when the how to measure button is clicked"
      },
      {
        "type": "text",
        "id": "measurement_button_text",
        "label": "Button Label",
        "default": "How to measure"
      },
      {
        "type": "checkbox",
        "id": "show_reviews",
        "label": "Enable",
        "default": true
      }
    ]
  }
{% endschema %}
{% if product.variants.size > 1 %}
        <script>
            var variantImages = {},
                thumbnails,
                variant,
                variantImage,
                optionValue,
                productOptions = [];
            {% for variant in product.variants %}
            variant = {{ variant | json }};
            if ( typeof variant.featured_image !== 'undefined' && variant.featured_image !== null ) {
              variantImage =  variant.featured_image.src.split('?')[0].replace(/http(s)?:/,'');
              variantImages[variantImage] = variantImages[variantImage] || {};
              {% for option in product.options %}
              {% assign option_value = variant.options[forloop.index0] %}
              {% assign option_key = 'option-' | append: forloop.index0 %}
              if (typeof variantImages[variantImage][{{ option_key | json }}] === 'undefined') {
                variantImages[variantImage][{{ option_key | json }}] = {{ option_value | json }};
              }
              else {
                var oldValue = variantImages[variantImage][{{ option_key | json }}];
                if ( oldValue !== null && oldValue !== {{ option_value | json }} )  {
                    variantImages[variantImage][{{ option_key | json }}] = null;
                }
              }
              {% endfor %}
            }
            productOptions.push(variant);
            {% endfor %}
        </script> 
    {% endif %}

<script type="lazyload2">
  	$(document).ready(function(){
    $(document).on('click','.dot',function(){
//         console.log("swatch click");
        setTimeout(function(){
            var varId = (new URL(location.href)).searchParams.get('variant');
          	console.log(varId);
            productOptions.forEach(function(variant,index){
                if(variant.id == varId){
                    var imgId = variant.featured_image.id;
                    console.log(varId,imgId);
//                   	console.log($('.slick-list .slick-slide[data-imageid="'+imgId+'"]').index() );
                  	var img_index = $('.slick-list .slick-slide[data-imageid="'+imgId+'"]').index();
                  	console.log(img_index)
                    $('.slider-nav .slick-slide[data-imageid="'+imgId+'"]').addClass('trigger').find('img').trigger('click');
                  	$(window).trigger('resize');
                  	console.log( $('.slider-nav .slick-slide[data-imageid="'+imgId+'"]'));
                  
                }
            })
        },100);
    });
      
       $('.slider-for').slick({
        infinite: true,
        slidesToShow: 1,
        dots: false,
        arrows: false,
      	asNavFor: '.slider-nav',
        autoplaySpeed: 3000,
        slidesToScroll: 1
    });
  	$('.slider-nav').slick({
      slidesToShow: 5,
      slidesToScroll: 1,
      asNavFor: '.slider-for',
     // prevArrow:"<button type='button' class='slick-prev pull-left'><i class='fa fa-angle-left' aria-hidden='true'></i></button>",
     // nextArrow:"<button type='button' class='slick-next pull-right'><i class='fa fa-angle-right' aria-hidden='true'></i></button>",
      focusOnSelect: true,
      infinite:true,
      arrows: true,
      responsive: [
      	{
          breakpoint: 768,
          settings: {
            slidesToShow: 5,
            arrows: true
          }
        },
        {
          breakpoint: 421,
          settings: {
            slidesToShow: 3,
            arrows: true
          }
        }
      ]
    });
   
  });
</script>
<style>
/* findify-recommendation Section */
.findify-recommendation .findify-components--cards--product__image-wrap {
    min-height: unset;
}
.findify-recommendation .findify-product_card-badge {
    top: 5px;
    left: 5px;
}
.findify-recommendation .findify-product_card-badge svg, ..findify-recommendation .findify-product_card-badge_text {
    width: 50px;
    height: 50px;
} 
.findify-recommendation .findify-product_card-badge span {
    font-size: 8px;
    line-height: 8px;
}
.findify-recommendation .swiper-button-next, .findify-recommendation .swiper-button-prev {
    top: 50%;
    padding: 0 0px;
    background: rgba(255,255,255,.8);
    border-radius: 50%;
    width: 30px;
    height: 30px;
    border: 1px solid #ddd;
}
.findify-recommendation .swiper-button-next {
    right: 0;
    left: auto;
}
.findify-recommendation .swiper-button-prev {
    left:21px
}
#magazine-logos {
  position: relative;
  width: 100vw;
  left: calc(-50vw + 50%);
  flex-wrap: nowrap;
  justify-content: center;
  margin-bottom: 50px;
  text-align: center;
  background-color: #F2F2F2;
  padding: 30px;
}
#magazine-img {
  max-width: 50%;
}
@media screen and (max-width: 767px) {
  #magazine-logos {
    width: 90vw;
    left: calc((-100vw + 100%)/2);
    margin-left: 5vw;
    margin-right: 5vw;
  }
  #magazine-img {
    max-width: 100%;
  }
  #magazine-title {
    margin-bottom: 0px;
    border-top: 1px solid #e9e9e9;
    padding-top: 10px;
  }
}
.bold_tooltip::before {
  background-color: #545352 !important;
  color: white;
}
.product__title {
  font-size: 30px;
}

/******** size-guide-css *******/
.size-guide .container{
  padding: 0;
}
body#hat-sizing-guide-for-american-hat-makers .layout-content-wrapper .row.justify-content-center {
  display: none;
}
.size-title h2 {
  font-size: 3.5rem;
  letter-spacing: 0;
  line-height: 1.0625;
  text-align: center;
}
.size-guide-table table{
  margin: 0 auto;
  border-collapse: separate;
  border-spacing: 15px;
  width: 100%;
  margin-bottom: 25px;
}
.size-guide-table table thead tr th {
  background-color: #B1193C;
  border-radius: 50px;
  padding: 10px;
  min-width: 200px;
  text-align: center;
  color: #fff;
}
.size-guide-table table thead tr th span {
  width: 100%;
  display: inline-block;
}
.size-guide-table table tbody tr {
  background-color: #F6EFEF;
}
.size-guide-table table tbody tr td{
  text-align: center;
  padding: 5px;
  border-radius: 50px;
  font-weight: 600;
}
.size-guide-table table tbody tr:nth-child(even) {
  background-color: #F2E0DD;
}
.size-note p {
  font-size: 16px;
  color: #000;
}
.size-guide .size-note {
  padding: 0 15px;
}
.size-title{
  padding-top: 40px;
}
@media screen and (min-width: 1200px){
  .modal-content-chart{
    width: 80%;
  }
  .size-guide-table table thead tr th{
      min-width: 150px;
  }
}
@media screen and (max-width: 1200px){
  .size-guide-table {
    overflow-x: scroll;
  }
  .size-guide-table table thead tr th{
      min-width: 100px;
  }
}
@media screen and (max-width: 991px){
  .size-title h2{
    font-size: 28px;
  }
}
@media screen and (max-width: 767px){
  .size-guide-table table{
    border-spacing: 4px !important;
  }
  .size-guide-table table thead tr th{
    border-radius: 11px;
    padding: 10px 1px;
    min-width: 50px;
    font-size: 14px;
    line-height: 18px;
  }
  .size-guide-table table tbody tr td{
    padding: 8px;
    font-size: 14px;
  }
}
@media screen and (max-width: 575px){
  .size-guide-table table thead tr th{
    font-size: 12px;
  }
  .size-guide-table table tbody tr td{
    font-size: 12px;
  }
}

</style>
